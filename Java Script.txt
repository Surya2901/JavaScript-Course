Prerequisite
*Basic computer knowledge
*Understanding Of HTML And CSS
*Text editor(Visual studio code, Notepad, etc)
*Web browser(Google chrome, Microsoft edge, etc)

In this section we are going to see complete JavaScript Course:
1. Introduction 2. Operators 3. Array 4. Conditional statements 5. Variables 6. Comparison operators 7. JS for loop 
8. JS Iteration statement 9. Do..while loop 10. Cookies 11. Functions 12. Error handling 13. Events 14. While loop 15. Page redirect
16. JS Loop control statements 17. Logical operators 18. Switch statements 19. Objects 20. JS If else statements 21. Animation.

1. Introduction to JavaScript

JavaScript Introduction
`Client-Side Scripting Language
`It is untyped, multi paradigm, functional, event driven
`It is Interpreted by browser's javascript engine.

JavaScript Advantages
^Less Server Interactions
^Better Performance
^Richer Interface
^Increased Interactivity

2. JavaScript Operators

Operators Introduction
`It is a symbol, which tells the system to perform specific operation
`Javascript has rich collection of built-in data types
`Operators can be unary, binary or ternary.

Operators classification
^Arithmatic Operator-Refer(Arithmetic operators.jpg)
^Assignment Operator
^Comparison Operator
^Logical Operator
^Ternary Operator

<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
    </head>
<body>
    <script language="javascript" type="text/javascript">
        var num1=40, num2=10;
        document.write(num1 + num2);
        document.write("<br/>");
        document.write(num1 - num2);
        document.write("<br/>");
        document.write(num1 * num2);
        document.write("<br/>");
        document.write(num1 / num2);
        document.write("<br/>");
        document.write(num1 % num2);
        document.write("<br/>");
    </script>
    or
    <script language="javascript" type="text/javascript">
        var num1=40, num2=10;
        var result = num1 + num2;
        document.write(result);
        or
        num1=num1+5;
        document.write(num1);
        or
        var result=10+5*20; =110 or (10+5)*20;=300 parenthesis
        document.write(result);
    </script>
</body>
</html>

#Pre & post increment method Pre & post decrement method (++num & --num)
<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
    </head>
<body>
    <script language="javascript" type="text/javascript">
        var num=10;
        var result=++num; or num++;
        document.write(result);
        document.write("<br/>");
        document.write(num);
    </script>
</body>
</html>

3. JavaScript Arrays

Lets you store multiple values in a single variable
It stores a fixed size sequential collection of elements
To access any element, we need to pass the index

Writing Data

var fruits = new Array ("apple", "orange", "mango");
var fruits = ["apple", "orange", "mango"];

Reading Data

fruits [0] is the first element
fruits [1] is the second element
fruits [2] is the third element

<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
    </head>
<body>
    <script language="javascript" type="text/javascript">
        var arr = new Array(5);
        arr[0] = 10;
        arr[1] = 20;
        arr[2] = 30;
        arr[3] = 40;
        arr[4] = 50;
        for (i = 0; i<5; i++) {
            document.write(arr[i] + "<br/>")
        }
    </script> 
    or
    <script language="javascript" type="text/javascript">
        var arr = new Array(10,20,30,40,50);
        
        for (i = 0; i<5; i++) {
            document.write(arr[i] + "<br/>")
        }
    </script>
</body>
</html>

2imp tasks in Array are sorting(ascending order > & < descending order) & searching
<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
    </head>
<body>
    <script language="javascript" type="text/javascript">
        var arr = new Array(7,2,8,1,3,4);
        var i, j, temp;

        document.write("<br/><br/>Before sort...<br/>");
        for (i = 0; i<6; i++) {
            document.write(arr[i] + "<br/>");
        }
        
        for (i = 0; i<6; i++) {
            for (j = 0; j<5; j++) {
                if (arr[j] < arr[j+1]) { imp (> <)
                    temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = temp;
                }
            }
        }
        document.write("<br/><br/>After sort...<br/>");
        for (i = 0; i<6; i++) {
            document.write(arr[i] + "<br/>");
        }
    </script>
</body>
</html>

4. Javascript Conditional Statements 
Introduction: If... Else... Switch(conditional satisfied by variables & operators of given tasks)

5. Javascript Variables

Variables Introduction

Used to store data temporarily
Variables will not have specific data type
Variables can have global or local scope

<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
    </head>
<body>
    <script language="javascript" type="text/javascript">
        var name = "surya";
        var age = 21;
        var salary = 50000.11;

        document.write("Name : " +name +"<br/>");
        document.write("age : " +age +"<br/>");
        document.write("salary : " +salary +"<br/>");
    </script>
</body>
</html>

6. Javascript Comparison Operators: Refer(Comparison Operators.jpg)

<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
    </head>
<body>
    <script language="javascript" type="text/javascript">
        var num1 = 100;
        document.write(num1 == 10);
        document.write("<br/>");
        document.write(num1 != 10);
        document.write("<br/>");
        document.write(num1 >= 10);
        document.write("<br/>");
        document.write(num1 <= 10);
        document.write("<br/>");
        document.write(num1 > 10);
        document.write("<br/>");
        document.write(num1 < 10);
        document.write("<br/>");
    </script>
</body>
</html>

7. Javascript For Loop: Refer(For Loop.jpg)

<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
    </head>
<body>
    <script language="javascript" type="text/javascript">
        var i;
        for(i=1; i<=100; i++) {
            if(i % 2 == 0) {
                document.write("i = " + i);
                document.write("<br/>");
            }
        }
    </script>
    or
    <script language="javascript" type="text/javascript">
        var i;
        var sum = 0;
        for(i=1; i<=100; i++) {
            if(i % 2 == 0) {
                sum = sum + i;
            }
        }
        document.write("Total: " + sum);
    </script>
</body>
</html>

<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
    </head>
<body>
    <script language="javascript" type="text/javascript">
        var i;
        var product=1;
        var num = parseInt(prompt("Enter a number","Enter..."))
        for(i=1; i<=num; i++) {
            product=product * i;
        }
        document.write("Factorial: " + product);
    </script>
</body>
</html>

8. JavaScript Iteration Statements Refer(IS Flowchart.jpg)

Iteration Statements Introduction:

Executes set of statements several times
Keeps on executing until gives condition is true
Different control statements can be nested.

Loops Classification: For, While, Do... While

9. JavaScript Do..while loop: Refer(Do..While Loop.jpg)

<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
    </head>
<body>
    <script language="javascript" type="text/javascript">
        var actualpin = "3456";
        var pin;
        var count = 0;
        do {
            pin = prompt("Enter your pin...", "Enter...");
            count++;
        } 
        while (pin != actualpin && count < 3);
        if (pin == actualpin ){
            document.write("Welcome User");
        } 
        else {
            document.write("Account Locked");
        }
    </script>
</body>
</html>

10. JavaScript Cookies

Is used for maintaining state on client
Cookies are stored on the client's machine as text file
When user visits again, the website reads the data from the cookie.

Cookies Types: Session cookie & Persistent cookie

<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
        <script language="javascript" type="text/javascript">
            function WriteCookie() {
                if (document.myform.customer.value == "") {
                    alert("Enter some value");
                    return;
                }
                var cookievalue = escape(document.myform.customer.value);
                document.cookie = "name" + cookievalue;
                document.write("Setting Cookies : " + "Name = " + cookievalue);
            }
        </script>
    </head>
<body>
    <form name="myform" action= "">
    Enter name: <input type="text" name="customer">
    <input type="button" value="set cookie" onclick="WriteCookie();"/>
</form>
</body>
</html>

11. JavaScript Functions

Functions Introduction

Is a set of statements perfrom specific task
Can be invoked whenever code execution is required
Provides reusability
Makes the code moduler
Can pass values through parameters
Can return value from a function using return keyword.

#Invoking
<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
        <script language="javascript" type="text/javascript">
            function sayHello() {
                document.write("Hello there!"); 
            }
        </script>
    </head>
<body>
    <p>Click the following button to call the function</p>
    <form>
        <input type="button" onclick="sayHello()" value="say Hello">
    </form>
</body>
</html>

<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
        <script language="javascript" type="text/javascript">
            function sayHello(name, age) {
                //if (name == "" || age == "")
                //return;
                document.write(name+" is " + age + " years old."); 
            }
        </script>
    </head>
<body>
    <p>Click the following button to call the function</p>
    <form>
        <input name="t1" placeholder="Enter Name"/> <br/>
        <input name="t2" placeholder="Enter Age"/> <br/>
        <input type="button" onclick="sayHello(t1.value, t2.value)" value="Say Hello"/>
    </form>
</body>
</html>

12. JavaScript Error handling

Runtime errors can be handled
Also called exceptions
Syntax or logical errors can not be handled in runtime
Try, catch, finally and throw are keywords used for exception handling.

<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
        <script language="javascript" type="text/javascript">
            function myFunc() {
                var a = 100
                try {
                    //var s = a.toUpperCase();
                    alert("value of a variable is: " + a);
                }
                catch (e) {
                    alert("Error");
                }
                finally {
                    alert("Finally block will always execute!");
                }
            }
        </script>
    </head>
<body>
    <p> Click the following button to see result: </p>
    <form>
        <input type="button" value="Click Me" onclick="myFunc();"/>
    </form>
</body>
</html>

13. JavaScript Events
<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
        <script language="javascript" type="text/javascript">
            function MouseOver() {
                document.images["img1"].src = "logo red.png"
            }
            function MouseOut() {
                document.images["img1"].src = "logo green.png"
            }
            function Load() {
                document.images["img1"].src = "logo green.png"
            }
        </script>
    </head>
<body onload="Load()">
    <img name="img1" onmouseover="MouseOver()"onmouseout="MouseOut()">
</body>
</html>

14. JavaScript While loop Refer(While loop.jpg)
<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
    </head>
<body>
    <script language="javascript" type="text/javascript">
        var num = parseInt(prompt("Enter the number", "Enter...")); //5432
        var count = 0;
        while (num > 0) { 
            num = Math.trunc(num / 10); //0
            count++; //4
        }
        document.write("Digits: " + count);
    </script>
</body>
</html>

15. JavaScript Page redirect
Page Redirect Introduction: Windows.location() method can be used to redirect user from one page to another.

<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
        <script language="javascript" type="text/javascript">
            function Redirect() {
                window.location = "http://www.Udemy.com";
            }
        </script>
    </head>
<body>
    <p>Click the following button, you will be redirect to udemy page</p>
    <form>
        <input type="button" value="Redirect Me" onclick="Redirect();"/>
    </form>
</body>
</html>

<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
        <script language="javascript" type="text/javascript">
            function Redirect() {
                window.location = "http://www.Udemy.com";
            }
        </script>
    </head>
<body onload="setTimeout('Redirect()',5000)">
    <p>You will be redirected in 5 seconds</p>
</body>
</html>

16. JavaScript Loop control statements: Its types are[Break & Continue Statement]
Refer: Break statement for(Break.jpg) and Continue statement for(Continue.jpg)
#Normal.S
<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
    </head>
<body>
    <script language="javascript" type="text/javascript">
        var i;
        for (i=1; i<=10; i++) {
            document.write("i=" + i + "<br/>");
        }
    </script>
</body>
</html>

#Break.S
<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
    </head>
<body>
    <script language="javascript" type="text/javascript">
        var i;
        for (i=1; i<=10; i++) {
            if (i==9)
            break;
            document.write("i=" + i + "<br/>");
        }
    </script>
</body>
</html>

#Continue.S
<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
    </head>
<body>
    <script language="javascript" type="text/javascript">
        var i;
        for (i=1; i<=10; i++) {
            if(i==5 || i==7)
            continue;
            document.write("i=" + i + "<br/>");
        }
    </script>
</body>
</html>

17. JavaScript Logical operators: Refer(Logical operators.jpg)
Turnary operator : ? & :

#Logical AND operator
<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
    </head>
<body>
    <script language="javascript" type="text/javascript">
        var uid = prompt("Enter User ID", "User ID");
        var pwd = prompt("Enter Password", "Password");
        
        var message = (uid == "SURYA" && pwd == 1111) ? "Welcome" : "Invalid User"
        alert(message);
    </script>
</body>
</html>

#Logical OR operator
<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
    </head>
<body>
    <script language="javascript" type="text/javascript">
        var user = prompt("Enter your name...", "Name...");        
        var message = (user == "SURYA" || user == "El") ? "Welcome" : "Invalid User"
        alert(message);
    </script>
</body>
</html>

#Logical NOT operator: reverse of or operator
<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
    </head>
<body>
    <script language="javascript" type="text/javascript">
        var user = prompt("Enter your name...", "Name...");        
        var message = !(user == "SURYA" || user == "El") ? "Welcome" : "Invalid User"
        alert(message);
    </script>
</body>
</html>

18. JavaScript Switch statements: Refer(Switch Flowchart.jpg)

<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
    </head>
<body>
    <script language="javascript" type="text/javascript">
        var ch = prompt("Enter a character","Enter....");
        switch(ch) {
            case 'a':
            document.write("A is vowel");
            break;
            case 'e':
            document.write("E is vowel");
            break;
            case 'i':
            document.write("I is vowel");
            break;
            case 'o':
            document.write("O is vowel");
            break;
            case 'u':
            document.write("U is vowel");
            break;
            default:
            document.write("Special character/Consonant")
            break;
        }
    </script>
</body>
</html>

<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
    </head>
<body>
    <script language="javascript" type="text/javascript">
        var ch = prompt("Enter a character","Enter....");
        switch(ch) {
            case 'a':
            case 'e':
            case 'i':
            case 'o':
            case 'u':
                document.write(ch + " is vowel");
                break;
            default:
                document.write(ch + " Special character or Consonant")
                break;
        }
    </script>
</body>
</html>

19. JavaScript Objects
<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
    </head>
<body>
    <script language="javascript" type="text/javascript">
        var tutorial = {
            "topic": "JavaScript",
            "trainer": "Vivek",
            "mode": "Online"
        };
        document.write("Topic : " + tutorial.topic);
        document.write("<br/> <br/>");
        document.write("Trainer : " + tutorial.trainer);
        document.write("<br/> <br/>");
        document.write("Mode : " + tutorial.mode);
        document.write("<br/> <br/>");
add
        var txt = "";
        var x;
        for (x in tutorial) {
            txt += tutorial[x] + " , ";
        }
        document.write(txt);
    </script>
</body>
</html>

20. JavaScript If else statement: Refer(If. Else. Flowchart.jpg)
<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
    </head>
<body>
    <script language="javascript" type="text/javascript">
        var marks1 = parseInt(prompt("Enter marks1", "Enter"));
        var marks2 = parseInt(prompt("Enter marks2", "Enter"));
        var marks3 = parseInt(prompt("Enter marks3", "Enter"));
        
        var total = marks1 + marks2 + marks3;
        var percent = total * 100 / 150;
        alert(percent);
        if (percent >= 80) {
            alert("Grade A");
        }
        else if (percent >= 60) {
            alert("Grade B");
        }
        else if (percent >= 40) {
            alert("Grade C");
        }
        else {
            alert("Grade D");
        }
    </script>
</body>
</html>

21. JavaScript Animation: Basic Animation code
<!DOCTYPE html>
<html>
    <head>
        <title>JavaScript Demo</title>
        <script>
            var arr = new Array("1.png", "2.png", "3.png", "4.png");
            var i = 1;
            var ref;
            function picLibrary() {
                document.images[0].src = arr[i];
                i++ 
                if (i < 3) 
                    i = 0;
            }
            function start() {
                ref = setInterval("picLibrary()", 1000);
            }
            function stop() {
                clearInterval(ref);
            }
        </script>
    </head>
<body onload = "start()">
    <img src="1.png" name="img1" onmouseover="stop()" onmouseout="start()"/>
</body>
</html>